import com.rameses.annotations.*;

class EntityIndividualListInterceptor  {

	@Env
	def env;

	@After(pattern="QueryService.getNodeList", eval="#{args[0]._schemaname == 'entityindividual'}") 
	public void afterGetNodes( evt ) {
		def nodes = evt.result;
		nodes << [state: 'ACTIVE', title: 'ACTIVE' ];
		nodes << [state: 'INACTIVE', title: 'INACTIVE' ];		
	}	

	@Before(pattern="QueryService.getList", eval="#{args[0]._schemaname == 'entityindividual'}") 
	public void beforeGetList( evt ) { 
		def o = evt.args[0]; 
		if( !o.node?.state ) return;

		def str = " state = :state ";
		def m = [ state: o.node.state ];

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		} 
	}	

}