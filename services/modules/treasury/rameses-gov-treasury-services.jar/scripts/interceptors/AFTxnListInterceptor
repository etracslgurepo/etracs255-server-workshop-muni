import com.rameses.annotations.*;
import com.rameses.util.*;
import java.rmi.server.*;
import com.rameses.common.*
import com.rameses.services.extended.*

class AFTxnListInterceptor { 
	
	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'aftxn' }")
	public void getNodes( evt ) { 
		def result = evt.result; 
		result << [ id:'open', title: 'Draft', state:'DRAFT' ];
		result << [ id:'closed', title: 'Posted', state:'POSTED' ];
		result << [ id:'cancelled', title: 'Cancelled', state:'CANCELLED' ];
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'aftxn' }")
	public void loadList( evt ) {
		def o = evt.args[0];
		if( !o.node?.id ) return;

		def str = " state = :state ";
		def m = [ state: o.node.state ];
		if ( m.state.toString().toUpperCase().matches('POSTED|CANCELLED')) {
			o.orderBy = 'txndate DESC';
		} 

		if( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		} 
	} 
}