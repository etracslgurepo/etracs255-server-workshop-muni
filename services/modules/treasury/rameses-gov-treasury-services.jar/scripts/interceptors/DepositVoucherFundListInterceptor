import com.rameses.annotations.*;

class DepositVoucherFundListInterceptor {

	@Service("NumberService")
	def numSvc;

	
	@After(pattern="QueryService.getNodeList", eval="#{ args[0]._schemaname == 'depositvoucher_fund' }")
	public void afterGetNodes( evt ) { 
		def x = evt.args[0];
		def result = evt.result;
		result << [  title: 'Open', state:'OPEN' ];
		result << [  title: 'Posted', state:'POSTED' ];
		result << [  title: 'Cancelled', state:'CANCELLED' ];
	}

	@Before(pattern="QueryService.getList", eval="#{ args[0]._schemaname == 'depositvoucher_fund' }")
	public void beforeGetList( evt ) {
		def o = evt.args[0];
		if( !o.node?.state ) return;

		def str = "state = :state";
		def m = [ state: o.node.state ]; 

		if ( o.where ) {
			o.where[0] = str + " AND " + o.where[0];	
			o.where[1].putAll( m );
		}
		else {
			o.where = [str, m];
		} 

		def orderbys = [];
		if ( o.node.state == 'OPEN' ) {
			orderbys << "parent.controldate, parent.dtcreated";
		} else {
			orderbys << "parent.controldate desc, parent.dtcreated desc"; 
		}

		if ( o.orderBy ) orderbys << o.orderBy; 
		if ( orderbys ) o.orderBy = orderbys.join(', '); 		
	}	

}
