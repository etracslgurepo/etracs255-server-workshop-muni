import com.rameses.annotations.*;
import com.rameses.util.*;

class EmailQueueTask {
	
	final String DEFAULT_CONNECTION = "primary-email-server"; 

	@XConnection(dynamic=true)
	def dyna_xconn;

	@DataContext("sys_email_queue")
	def emailQueue;

	@Service("DateService")
	def dateSvc;
	
	@Service(value="JasperReportEmailService")
	def jasperService;


	@Schedule(interval=3)
	public void sendSimpleEmail( task ) {
		def list = emailQueue.where("state = 0 AND reportid IS NULL").orderBy("dtsent").list(0, 25); 
		if ( !list ) return; 

		sendImpl( list, { o-> 
			def mailConn = dyna_xconn.lookup( o.connection ? o.connection : DEFAULT_CONNECTION ); 
			mailConn.send([ to: o.to, subject: o.subject, message: o.message ]); 
			emailQueue.find([ objid: o.objid ]).delete(); 
		}); 

		list.clear(); 
	} 

	@Schedule(interval=10)
	public void sendReportEmail( task ) {
		def list = emailQueue.where("state = 0 AND reportid IS NOT NULL").orderBy("dtsent").list(0, 25); 
		if ( !list ) return; 

		sendImpl( list, { o-> 
			jasperService.send([ 
				to: o.to, subject: o.subject, message: o.message, 
				reportid: o.reportid, refid: o.refid, connection: o.connection 
			]); 
			emailQueue.find([ objid: o.objid ]).delete(); 
		}); 

		list.clear(); 
	}


	private void sendImpl( list, callBackHandler ) {
		list.each {
			try { 
				callBackHandler( it ); 
			} 
			catch (exx) { 
				def e = ExceptionManager.instance.getOriginal( exx ); 
				emailQueue.find([ objid: it.objid ]).update([ state:2, errmsg: e.message ]); 
			} 
		}
	}
}