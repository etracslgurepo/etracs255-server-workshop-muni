import com.rameses.annotations.*;
import com.rameses.common.*;

class BPQuarterlypPaidReportService {
	
	@ActiveDB("bpreport")
	def em

    @Service('DateService') 
    def dateSvc; 

	@ProxyMethod
	public def getReport( params ) { 
		if ( !params.permittype?.objid ) 
			throw new Exception('permit type parameter is required'); 		

		params.startdate = params.year.toString() +'-01-01'; 

		def startdate = resolveDate( params.startdate ); 
		if ( !startdate ) throw new Exception('startdate parameter is required'); 

		def enddate = resolveDate( params.enddate );  
		if ( !enddate ) throw new Exception('enddate parameter is required'); 

		params.startdate = startdate; 
		params.enddate = resolveDate( dateSvc.add( enddate, '1d' )); 
		params.permittypeid = params.permittype.objid; 
		params.filter = params.taxfeetypefilter = ''; 

		if ( params.showtaxonly.toString().matches('true|1')) {
			params.taxfeetypefilter = " AND br.taxfeetype = 'TAX' "; 
		} else { 
			params.taxfeetypefilter = ''; 
		} 

		def list = em.getQtrlyPaidBusinessList( params );
		if ( !list ) throw new Exception('No record(s) found that matches your criteria.');

		return list;
	} 

	private def resolveDate( value ) { 
		if ( !value ) return null; 
		if ( value instanceof java.util.Date ) { 
			return new java.sql.Date( value.time ); 
		} 

		try { 
			def dt = java.sql.Timestamp.valueOf( value.toString() ); 
			return new java.sql.Date( dt.time );  
		} catch(Throwable t) {;} 

		try { 
			return java.sql.Date.valueOf( value.toString() ); 
		} catch(Throwable t) { 
			return null; 
		} 
	}		
}