import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportAbstractTaxCollectionService{
	@ActiveDB('landtaxreport')
    def em;

    @Service('DateService')
    def dtsvc;

    @ProxyMethod
    def generateAbstractOfRPTCollection(params){
        String datestr;
        params.collectorid = params.collector? params.collector.objid : '%';
        if(params.period=='Daily'){
            datestr = params.date;
        	params.fromdate = params.date;
        	params.todate = dtsvc.add(dtsvc.parse("yyyy-MM-dd",params.date),"1d");
        }
        if(params.period=='Monthly'){
            datestr = params.month.name+", "+params.year;
            params.fromdate = params.year+"-"+params.month.index+"-01";
            params.todate = dtsvc.getMonthEndDate(dtsvc.parse("yyyy-MM-dd",params.fromdate));
            params.todate = dtsvc.add(dtsvc.parse("yyyy-MM-dd",params.todate),"1d");
        }
        if(params.period=='Range'){
            datestr = params.startdate+" to "+params.enddate;
            params.fromdate = params.startdate;
            params.todate = dtsvc.add(dtsvc.parse("yyyy-MM-dd",params.enddate),"1d");
        }
    	def items = em.getAbstractOfRPTCollection(params);
		def advitems = em.getAbstractOfRPTCollectionAdvance(params);

		def header = [:]
        header.collector = params.collector? params.collector.lastname+", "+params.collector.firstname: 'ALL';
        header.date = datestr;

		return  [header:header, items:items, advitems:advitems];
    }
}