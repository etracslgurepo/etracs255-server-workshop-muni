import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportNoaListService
{
	@Env 
	def env 

    @ActiveDB('rptreport_noa_listing')
    def em

    @Service('RPTUtil')
    def util

    @Service('DateService')
    def dtSvc 

    @Service('RPTAssessmentNoticeService')
    def noticeSvc


    @ProxyMethod
    public def getStates() {
    	return noticeSvc.getStates()
    }

    @Async
	@ProxyMethod
	public Map buildReport( params ) {
		util.required('LGU', params.lgu)
		params.lguid = params.lgu.objid 

		util.buildStartEndDateFilter(params)

		def items = em.getList(params)
		if (!items) throw new Exception('Records not found.')	

		def p = [
			PERIOD 		: util.buildPeriod(params),
			TITLE		: buildTitle(params),
			FORLGUNAME  : (params.lgu ? params.lgu.name : (env.ORGCLASS + ' OF ' + env.ORGNAME)),
		]

		return [
			parameters  : p, 
			reportdata  : items,
		]
	}

	def buildTitle(params) {
		def state = params.state[0].toUpperCase()
		state += params.state.substring(1).toLowerCase()
		return 'List of ' + state + ' Notice of Assessments'
	}
}
