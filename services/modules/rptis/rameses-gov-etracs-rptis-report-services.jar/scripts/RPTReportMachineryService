import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportMachineryService
{
    @ActiveDB('rptreport_machinery')
    def em



    @ProxyMethod
    public def getRevisionYears(){
    	return em.getRevisionYears().ry 		
    }



    @Async
    @ProxyMethod
	public Map buildReport(params) {
		params.lguid = (params.lgu ? params.lgu.objid : '%')
		params.barangayid = (params.barangay ? params.barangay.objid : '%')
		params.classificationid = (params.classification ? params.classification.objid : '%')
		params.machineid = (params.machine ? params.machine.objid  : '%')
		params.taxpayerid = (params.taxpayer ? params.taxpayer.objid : '%')

		def list = em.getMachineries(params)
		if (!list)
			throw new Exception('Record not found.')

		list.each{
			if (it.administrator && it.administrator.name){
				it.owner.name = it.owner.name + '\nAdmin: ' + it.administrator.name 
			}
		}
			
		def titles = [];
		if (params.classification) titles << params.classification.name 
		if (params.machine) titles << params.machine.name 
		titles << 'MACHINERIES' 
		def p = [
			TITLE : 'LIST OF ' + titles.join(' ') + ' ( Revision Year ' + params.ry + ')'
		]

		return [
			parameters  : p,
			reportdata  : list 
		]
	} 
}