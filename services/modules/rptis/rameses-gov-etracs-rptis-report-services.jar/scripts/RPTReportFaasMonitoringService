import com.rameses.annotations.*
import com.rameses.common.*
import com.rameses.services.extended.*
import java.rmi.server.UID
import java.text.SimpleDateFormat
import java.util.Calendar
import java.lang.*

class RPTReportFaasMonitoringService 
{
	@ActiveDB('faasreport_monitoring')
	def em

	@Service('RPTUtil')
	def util

	@ProxyMethod
	def getUsers(params){
		params.userid = '%'
		util.buildStartEndDateFilter(params)
		return em.getUsers(params)
	}

	@Async
	@ProxyMethod
	def buildReport(params){
		util.buildStartEndDateFilter(params)
		params.userid = (params.user ? params.user.userid : '%')
		def data = []
		def users = em.getUsers(params)
		users.each{user -> 
			params.userid = user.userid
			def actions = em.getTxnLogActions(params)
			actions.each{
				def entity = [:]
				entity.user = user.username
				entity.action = it.action
				params.action = it.action
				entity.actioncount = (int) em.findActionCount(params).sum
				data << entity
			}
		}

		if (!data) throw new Exception('Record does not exist on the specified period.')

		def p = [
			PERIOD: util.buildPeriod(params),
		]

		return [
			parameters: p, 
			reportdata: data,
		]
	}
}