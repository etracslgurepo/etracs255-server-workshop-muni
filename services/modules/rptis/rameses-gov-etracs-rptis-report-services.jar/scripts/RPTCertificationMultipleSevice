import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTCertificationMultipleService 
{
    @ActiveDB('rptcertification')
    def em;

    @Service('RPTCertificationService')
    def certSvc 

	
	@ProxyMethod
	public def createCertification( cert ) {
		certSvc.buildFilter(cert)
		certSvc.createCertification(cert)
		em.insertMultipleItems(cert)
		cert.items = getItems(cert)
		certSvc.buildFootNotes(cert)
		certSvc.makeHtmlSafe(cert)
		return cert 
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		cert.items = getItems(cert)
		certSvc.buildFootNotes(cert)
		return cert 
	}

	def getItems(cert){
		cert.orderby = 'ORDER BY suffix,tdno'
		if (cert.includemembers) {
			cert.orderby = 'ORDER BY owner_name,suffix,tdno'
		}
		def items = em.getMultipleItems(cert).each{
			it.street = (it.street ? it.street : it.barangay)
			buildDescription(it)
		}
		if (!items) 
			throw new Exception('There are no land properties registered for this taxpayer.')
		
		if (cert.includemembers) {
			// move taxpayer properties to the top 
			def list = []
			list += items.findAll{ it.taxpayerid == cert.taxpayerid }
			list += items.findAll{ it.taxpayerid != cert.taxpayerid }
			return list
		}
		return items
	}

	void buildDescription(item){
		def infos = []
		if ('land'.equalsIgnoreCase(item.rputype) && item.cadastrallotno){
			item.description = 'LOT ' + item.cadastrallotno 
		}
		else if ('bldg'.equalsIgnoreCase(item.rputype)){
			infos = em.getBldgInfos(item).each{bi-> bi.info = bi.bldgkind.name}
			if (infos){
				item.description = infos.info.join(',')
			}
		}
		else if ('mach'.equalsIgnoreCase(item.rputype)){
			infos = em.getMachInfos(item)
			if (infos){
				item.description = infos.machine.name.join(',')
			}
		}
		else if ('planttree'.equalsIgnoreCase(item.rputype)){
			infos = em.getPlantTreeInfos(item)
			if (infos){
				item.description = infos.planttree.name.join(',')
			}
		}
		else if ('misc'.equalsIgnoreCase(item.rputype)){
			infos = em.getMiscInfos(item)
			if (infos){
				item.description = infos.miscitem.name.join(',')
			}
		}
	}
}
