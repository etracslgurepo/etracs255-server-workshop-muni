
import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTCertificationAdHocService 
{
    @Service('RPTCertificationService')
    def certSvc 

    @ProxyMethod
    public def createCertification( cert ) {
        cert.includemembers = false
        certSvc.createCertification(cert)
        return openCertification(cert.objid)
    }

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) {
			throw new Exception('Certification does not exist or has already been deleted.')
        }
		loadFaasInfo(cert)
		return cert 
	}

    void loadFaasInfo(cert){
		def faas = certSvc.getFaasInfo(cert.faasid)
		if (faas) {
			faas.street = (faas.street ? faas.street : faas.barangay.name)
			def certid = cert.objid 
			cert.putAll( faas )
			cert.objid = certid
			if (!cert.items)
				cert.items = []
		}
		certSvc.makeHtmlSafe(cert)
	}
}
