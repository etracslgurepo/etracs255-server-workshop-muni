import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class RPTReportLandSpecificClassService
{
    @ActiveDB('rptreport_land_specificclass')
    def em



    @ProxyMethod
    public def getRevisionYears(){
    	return em.getRevisionYears().ry 		
    }


    @ProxyMethod
    public def getSpecificClasses(ry) {
    	return em.getSpecificClasses([ry:ry])
    }



    @Async
    @ProxyMethod
	public Map buildReport(params) {
		params.lguid = (params.lgu ? params.lgu.objid : '%')
		params.barangayid = (params.barangay ? params.barangay.objid : '%')
		params.classificationid = (params.classification ? params.classification.objid : '%')
		params.section = (params.section ? params.section : '%')
		params.landspecificclassid = params.specificclass.objid 
		params.taxpayerid = (params.taxpayer ? params.taxpayer.objid : '%')

		def list = em.getLandSpecificClasses(params)
		if (!list)
			throw new Exception('Record not found.')

		list.each{
			if (it.administrator && it.administrator.name){
				it.owner.name = it.owner.name + '\nAdmin: ' + it.administrator.name 
			}
		}
			
		def p = [
			TITLE : 'LIST OF ' + params.specificclass.name + ' PROPERTIES ( Revision Year ' + params.ry + ')'
		]

		return [
			parameters  : p,
			reportdata  : list 
		]
	} 
}