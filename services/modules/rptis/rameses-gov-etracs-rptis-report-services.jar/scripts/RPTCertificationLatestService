
import com.rameses.annotations.*
import com.rameses.eserver.*;
import com.rameses.common.*;
import com.rameses.services.extended.*;

class RPTCertificationLatestService 
{
    @Service('RPTCertificationService')
    def certSvc 

    @ActiveDB('rptcertification')
    def em 

	
	@ProxyMethod
	public def createLatestAndExisting( cert ) {

		if (cert.faasid)
			certSvc.validateFaas(cert)

		certSvc.createCertification(cert)
		certSvc.buildFilter(cert)

		if (!cert.faasid)
			em.insertLastAndExistingItems(cert)

		return openCertification(cert.objid);
	}

	@ProxyMethod
	public def openCertification(objid) {
		def cert = certSvc.openCertification(objid)
		if (! cert ) 
			throw new Exception('Certification does not exist or has already been deleted.')
		if (!cert.faasid){
			cert.items = em.getLatestAndExistingItems(cert).each{
				it.street = (it.street ? it.street : it.barangay)
				it.description = it.cadastrallotno
				if (it.rputype == 'bldg')
					it.description = 'Type ' + em.getBldgTypes(it).code.join('/')
			}
			certSvc.buildFootNotes(cert)
		}
		else{
			def certid = cert.objid
			cert.putAll(certSvc.getFaasInfo(cert.faasid))
			cert.objid = certid
		}
		return cert 
	}


	

}
