import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;


class RPTReceiptPostShareInterceptor
{
	@ActiveDB('landtax_lgu_share_posting')
	def em 


	@Before(pattern="CollectionVoucherService.create", index=1000)
	public void beforeInit( evt ) {
		//check for any rpt tax unposted shares 
		def param = evt.args[0]
		if (!param.ids) return

		param.filter = "where r.objid IN ('"+ param.ids.join("','") +"')"; 
		def pendingReceipts = em.findPendingReceiptForPosting(param)
		if (pendingReceipts.cnt > 0) {
			def msg = 'There '
			msg += (pendingReceipts.cnt == 1 ? 'is' : 'are still')
			msg += ' ' + pendingReceipts.cnt + ' real property tax '
			msg += (pendingReceipts.cnt == 1 ? 'share' : 'shares')
			msg += ' to be posted.\n'
			msg += 'Please wait for the task to be completed before proceeding.'
			throw new Exception(msg)
		}
	} 
}

