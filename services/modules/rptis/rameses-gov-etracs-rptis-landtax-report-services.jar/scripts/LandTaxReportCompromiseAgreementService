import com.rameses.annotations.*
import com.rameses.common.*;
import com.rameses.services.extended.*;
import java.rmi.server.UID

class LandTaxReportCompromiseAgreementService
{
    @ActiveDB('landtaxreport_compromise_agreement')
    def em;

    @Service('DateService')
    def dtSvc 
    
    @ProxyMethod
    def generateReport(params){
        params.lguid = (params.lgu ? params.lgu.objid : '%')
        params.barangayid = (params.barangay ? params.barangay.objid  : '%')

        def title = 'LIST OF REALTY TAX COMPROMISE AGREEMENTS'
        def lguname = null 
        if (params.lgu){
            lguname = params.lgu.lgutype.toUpperCase() + ' OF ' + params.lgu.name 
        }
        if (params.barangay){
            lguname = 'BARANGAY ' + params.barangay.name + ', ' + params.lgu.name 
        }

        if (lguname){
            title += '\n' + lguname 
        }

        def period = 'As of ' + dtSvc.format('MMMMM dd, yyyy', dtSvc.serverDate);
        def list = em.getActiveAgreements(params)
        if (!list) 
            throw new Exception('Records not found.')

        return [
            parameters  : [PERIOD : period, TITLE:title],  
            reportdata  : list 
        ]
    }

   
}